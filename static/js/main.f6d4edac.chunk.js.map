{"version":3,"sources":["components/Header.js","components/Search.js","components/Main.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","React","useState","word","setWord","type","placeholder","onChange","e","target","value","onClick","preventDefault","console","log","Main","defaultState","center","zoom","controls","modules","defaultGeometry","properties","balloonContentBody","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,SAASA,IACtB,OACE,sBAAKC,UAAU,SAAf,UACE,qBAAKA,UAAU,sBACf,sBAAKA,UAAU,kBAAf,UACE,mBAAGA,UAAU,YAAb,+GACA,mBAAGA,UAAU,YAAb,4CACA,mBAAGA,UAAU,YAAb,6EAEF,mBAAGA,UAAU,2BAAb,oB,WCLS,SAASC,IAAU,IAAD,EACPC,IAAMC,SAAS,IADR,mBACxBC,EADwB,KAClBC,EADkB,KAa/B,OACE,sBAAKL,UAAU,SAAf,UACE,oBAAIA,UAAU,gBAAd,qVAKA,uBAAMA,UAAU,oBAAhB,UACE,uBACAA,UAAU,aACVM,KAAK,OACLC,YAAY,6HACZC,SAhBN,SAA2BC,GACzBJ,EAAQI,EAAEC,OAAOC,UAiBb,wBACEC,QAxBR,SAA2BH,GACzBA,EAAEI,iBACFC,QAAQC,IAAIX,IAuBNJ,UAAU,eACVM,KAAK,SAHP,4CAMC,mBAAGN,UAAU,cAAb,gH,WCjCM,SAASgB,IAUtB,OAEE,sBAAKhB,UAAU,OAAf,UAEE,cAACC,EAAD,IACA,cAAC,IAAD,UACE,8BAEE,eAAC,IAAD,CAAKD,UAAU,MACbiB,aAAc,CACZC,OAAQ,CAAC,MAAO,OAChBC,KAAM,GACNC,SAAU,CAAC,cAAe,sBAE5BC,QAAS,CAAC,sBAAuB,6BANnC,UASE,cAAC,IAAD,CAAWC,gBAAiB,CAAC,MAAO,OACnCD,QAAS,CAAC,2BACVE,WAAY,CACXC,mBACE,kGAGH,cAAC,IAAD,CAAWF,gBAAiB,CAAC,MAAO,OACpCD,QAAS,CAAC,2BACVE,WAAY,CACXC,mBACE,4GC3BDC,MAVf,WACE,OACE,sBAAKzB,UAAU,OAAf,UACE,cAACD,EAAD,IACA,cAACiB,EAAD,QCGSU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f6d4edac.chunk.js","sourcesContent":["export default function Header() {\r\n  return(\r\n    <div className=\"header\">\r\n      <img className=\"header__logo logo\"/>\r\n      <nav className=\"header__nav nav\">\r\n        <a className=\"nav__item\">Создать обращение</a>\r\n        <a className=\"nav__item\">Карта</a>\r\n        <a className=\"nav__item\">Статистика</a>\r\n      </nav>\r\n      <a className=\"header__item header__faq\">FAQ</a>\r\n    </div>\r\n  )\r\n}","\r\n\r\nimport React from 'react';\r\n\r\nexport default function Search() {\r\n  const [word, setWord] = React.useState('');\r\n  \r\n\r\n  function handleClickSearch(e) {\r\n    e.preventDefault();\r\n    console.log(word)\r\n  }\r\n\r\n  function handleChangeInput(e) {\r\n    setWord(e.target.value)\r\n  }\r\n\r\n  return(\r\n    <div className=\"search\">\r\n      <h1 className=\"search__title\">\r\n      Надежный способ \r\nсообщить о проблеме в городе \r\nи быть услышанным\r\n      </h1>\r\n      <form className=\"search__form form\">\r\n        <input \r\n        className=\"form__edit\"\r\n        type=\"text\"\r\n        placeholder=\"Введите ключевые слова\"\r\n        onChange={handleChangeInput}>\r\n        </input>\r\n        <button\r\n          onClick = {handleClickSearch}\r\n          className=\"form__button\"\r\n          type=\"submit\">\r\n           Поиск\r\n         </button>\r\n         <p className=\"search__tip\">\r\n      Например, “мороз” \r\n      </p>\r\n      </form>\r\n    \r\n    </div>\r\n\r\n  )\r\n}","import Search from './Search'\r\nimport { YMaps, Map, Placemark } from \"react-yandex-maps\";\r\nimport React from 'react';\r\n\r\nexport default function Main() {\r\n  // const CurrentUserContext  = React.createContext();\r\n  // const [currentUser, setCurrentUser] = React.useState(37);\r\n  // setTimeout(ez, 5000);\r\n  // function ez() {\r\n  //   setCurrentUser(currentUser + 1)\r\n  //   console.log([`55.75, ${currentUser}.57`])\r\n  // }\r\n// <CurrentUserContext.Provider value={currentUser}></CurrentUserContext.Provider>\r\n// непонятно как сделать всплывающие балоны на реакте) зря я начал сразу на реакте(\r\n  return(\r\n    \r\n    <div className=\"main\">\r\n      \r\n      <Search />\r\n      <YMaps>\r\n        <div >\r\n        \r\n          <Map className=\"map\"\r\n            defaultState={{\r\n              center: [55.75, 37.57], \r\n              zoom: 10,\r\n              controls: [\"zoomControl\", \"fullscreenControl\"],\r\n            }}\r\n            modules={[\"control.ZoomControl\", \"control.FullscreenControl\"]}\r\n          >\r\n            \r\n            <Placemark defaultGeometry={[55.75, 37.57]} \r\n             modules={['geoObject.addon.balloon']}\r\n             properties={{\r\n              balloonContentBody:\r\n                'Человек со стихом',\r\n            }}\r\n             />\r\n             <Placemark defaultGeometry={[55.79, 37.57]} \r\n             modules={['geoObject.addon.balloon']}\r\n             properties={{\r\n              balloonContentBody:\r\n                'Человек со стихом',\r\n            }}\r\n             />\r\n  \r\n            \r\n          </Map>\r\n\r\n        </div>\r\n      </YMaps>\r\n    </div>\r\n  )\r\n}","import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\n\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <Header />\n      <Main />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}